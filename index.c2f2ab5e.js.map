{"mappings":"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","sources":["node_modules/process/browser.js","node_modules/path-browserify/index.js","src/ts/logger.ts","src/ts/index.ts"],"sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","export default class logger {\n  log(message: string): void {\n    console.log(this.messageAddApendix(message));\n  }\n\n  messageAddApendix(str: string): string {\n    return `logger : ${str}`;\n  }\n}\n","import * as fs from \"fs\";\nimport * as path from \"path\";\nimport * as bootstrap from \"bootstrap\";\nimport logger from \"./logger\";\n\ninterface returnDom {\n  sidebar: HTMLDivElement;\n  mainContent: HTMLDivElement;\n}\n\nclass Main {\n  sidebar: HTMLDivElement;\n  mainContent: HTMLDivElement;\n\n  constructor() {\n    new logger().log(\"Main constructor\");\n    const ret = this.getDom();\n    this.sidebar = ret.sidebar;\n    this.mainContent = ret.mainContent as HTMLDivElement;\n  }\n\n  async start() {\n    const fileData = await fs.readFileSync(\n      path.join(__dirname, \"../data.json\"),\n      \"utf8\"\n    );\n    const jsonList = await JSON.parse(fileData);\n\n    this.sidebar.innerHTML = \"<ul>\";\n    await jsonList.forEach((jsonData) => {\n      this.sidebar.innerHTML += `<li>${jsonData.id} : ${jsonData.data}</li>`;\n    });\n    this.sidebar.innerHTML += \"</ul>\";\n\n    this.mainContent.innerHTML = \"<p>TypeScriptから書いてます</p>\";\n  }\n\n  getDom(): returnDom {\n    const sidebar = document.querySelector(\"#sidebar\") as HTMLDivElement;\n    const mainContent = document.querySelector(\"#main\") as HTMLDivElement;\n    if (!sidebar || !mainContent) {\n      throw new Error(\"DOMが取れませんでした\");\n    }\n    return { sidebar: sidebar, mainContent: mainContent };\n  }\n}\n\nconst main = new Main();\nmain.start();\n"],"names":["$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$exports","$cfae44f0dfdf62c0$var$defaultSetTimout","Error","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","e","call","this","clearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","length","concat","$cfae44f0dfdf62c0$var$drainQueue","timeout","len","run","marker","$cfae44f0dfdf62c0$var$runClearTimeout","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","$3bfdb7183e8721d6$var$assertPath","path","TypeError","JSON","stringify","$3bfdb7183e8721d6$var$normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","i","charCodeAt","lastSlashIndex","lastIndexOf","slice","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$3bfdb7183e8721d6$var$posix","resolve","resolvedPath","resolvedAbsolute","undefined","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","root","base","$3bfdb7183e8721d6$var$_format","parse","ret","delimiter","win32","posix","$9bda57ae01f60f29$export$2e2bcd8739ae039","log","message","console","messageAddApendix","str","constructor","getDom","sidebar","mainContent","async","fileData","jsonList","innerHTML","forEach","jsonData","id","data","document","querySelector"],"version":3,"file":"index.c2f2ab5e.js.map"}